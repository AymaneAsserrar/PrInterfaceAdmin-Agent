stages:
  - test
  - lint
  - coverage
  - build_and_deploy


default:
  image: devops.telecomste.fr:5050/printerfaceadmin/2024-25/group8/ia-groupe-8:tooling



lint:
  stage: lint
  script:
    - pylint src/ --disable=R0011,W292,C0301 --fail-under=7.6
  allow_failure: false
 
 

test:
  stage: test
  script:
    - echo "Starting test..."
    - pip install -r requirements.txt
    - apk add --no-cache make
    - make environment
    - make test 


coverage:
  stage: coverage
  script:
   - pip install -r requirements.txt
   - pytest --cov=src --cov-report=xml --cov-report=term-missing --cov-config=.coveragerc --cov-fail-under=70
  coverage: /TOTAL.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/
  artifacts:
    
    paths:
      - coverage.xml




variables:
  CI_REGISTRY_IMAGE: devops.telecomste.fr:5050/printerfaceadmin/2024-25/group8/ia-groupe-8
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  CI_REGISTRY_USER: TokenDockerAgent 
  CI_REGISTRY_PASSWORD: glpat-RKs7JCFTd8Tr8KsHPcxf

services:
  - name: docker:dind
    entrypoint: ["env", "-u", "DOCKER_HOST"]
    command: ["dockerd-entrypoint.sh"]



build_and_deploy:
  stage: build_and_deploy
  image: docker:19.03.12
  before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - DATEPRECISE=$(date +"%Y%m%d-%H%M%S")
    - docker build --pull -t "$CI_REGISTRY_IMAGE:latest" .
    - docker tag "$CI_REGISTRY_IMAGE:latest" "$CI_REGISTRY_IMAGE:$DATEPRECISE"
    - docker push "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:$DATEPRECISE"
    - docker pull "$CI_REGISTRY_IMAGE:latest"
  only:
    - main
 
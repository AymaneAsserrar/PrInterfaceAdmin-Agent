---
stages:
  - test
  - lint
  - coverage
default:
  image: python:3.12-alpine

lint:
  stage: lint
  before_script:
    - apk add --no-cache gcc python3-dev musl-dev linux-headers jq
    - pip install pylint
    - pip install -r requirements.txt
  script:
    - pylint $(find . -type f -name "*.py" -not -path "*/venv/*")
    - pylint_score=$(pylint --output-format=json $(find . -type f -name "*.py"
      -not -path "*/venv/*") | jq '.[0].score')
    - if [[ $pylint_score < 8 ]]; then echo "Lint failed, score is
      $pylint_score"; exit 1; else echo "Lint passed, score is $pylint_score";
      fi
  allow_failure: false



test:
  stage: test
  script:
    - echo "Starting test..."
    - apk add --no-cache gcc python3-dev musl-dev linux-headers make
    - pip install -r requirements.dev.txt
    - apk add --no-cache make
    - make environment
    - make test
coverage:
  stage: coverage
  script:
    - apk add --no-cache gcc python3-dev musl-dev linux-headers
    - pip install pytest-cov
    - pip install -r requirements.dev.txt
    - pytest --cov=src --cov-report=xml --cov-report=term-missing
    - coverage html
  artifacts:
    paths:
      - coverage.xml
      - htmlcov/
